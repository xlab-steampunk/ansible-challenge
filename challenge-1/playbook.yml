---
- name: Deploy web page using Ansible and Docker
  hosts: localhost
  gather_facts: true
  vars:
    docker_network_name: my_network
    docker_container_name: my_web_page
    application_port: 8080
  tasks:
    - name: Check Docker service status
      ansible.builtin.systemd_service:
        name: docker
        state: started
      register: docker_service_status
      delegate_to: localhost

    - name: Fail the playbook if Docker is not running
      ansible.builtin.fail:
        msg: "Docker service is not running on the target host."
      when: docker_service_status.failed

    - name: Create temporary directory
      ansible.builtin.tempfile:
        state: directory
        prefix: web_deploy_
      register: temp_dir

    - name: Set permissions for temporary directory
      ansible.builtin.file:
        path: "{{ temp_dir.path }}"
        mode: "0755"

    - name: Copy index.html file
      ansible.builtin.copy:
        content: |
          <html>
          <head>
            <title>Hello World!</title>
          </head>
          <body>
            <h1>Hello world! I was deployed using Ansible.</h1>
          </body>
          </html>
        dest: "{{ temp_dir.path }}/index.html"
        mode: "0644"

    - name: Create a network for Docker containers
      community.docker.docker_network:
        name: "{{ docker_network_name }}"
        state: present

    - name: Create Docker container for web page
      community.docker.docker_container:
        name: "{{ docker_container_name }}"
        image: nginx:1.25.2-bookworm
        state: started
        published_ports:
          - "{{ application_port }}:80"
        volumes:
          - "{{ temp_dir.path }}:/usr/share/nginx/html"
        networks:
          - name: "{{ docker_network_name }}"
            aliases: my_network
        healthcheck:
          test: [ "CMD", "curl", "--fail", "http://localhost:{{ application_port }}/" ]
          start_period: 30s

    - name: Wait for Nginx container to start
      ansible.builtin.wait_for:
        host: localhost
        port: "{{ application_port }}"
        timeout: 30
        state: started

    - name: Install curl
      ansible.builtin.package:
        name: curl
        state: present
      become: true

    - name: Test if web page is accessible
      ansible.builtin.command: "curl http://localhost:{{ application_port }}/"
      register: curl_output
      until: "curl_output.stdout.find('Hello world! I was deployed using Ansible.') != -1"
      retries: 10
      delay: 2
      changed_when: false

    - name: Display website URL
      ansible.builtin.debug:
        msg: "Web page deployed successfully! Access it at http://localhost:{{ application_port }}/"
